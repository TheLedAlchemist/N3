Set the python path to: /share/pendulums/msgill/GrowingNetworks/N3/src:
Begin training on seed 0

------------------------------------------------------------
Sender: LSF System <lsfadmin@c013n01>
Subject: Job 192175: <besselTest> in cluster <Hazel> Exited

Job <besselTest> was submitted from host <login03.hpc.ncsu.edu> by user <msgill> in cluster <Hazel> at Wed Jan  8 09:21:32 2025
Job was executed on host(s) <1*c013n01>, in queue <single_chassis>, as user <msgill> in cluster <Hazel> at Wed Jan  8 09:21:32 2025
                            <1*c003n04>
                            <1*c013n03>
                            <1*c010n03>
                            <2*c005n04>
                            <2*c003n03>
                            <2*c010n01>
</home/msgill> was used as the home directory.
</share/pendulums/msgill/GrowingNetworks/N3> was used as the working directory.
Started at Wed Jan  8 09:21:32 2025
Terminated at Wed Jan  8 21:21:41 2025
Results reported at Wed Jan  8 21:21:41 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/bash

#BSUB -n 10
#BSUB -W 720
#BSUB -J besselTest
#BSUB -o stdout.%J
#BSUB -e stderr.%J

# Define the number of seeds and the number of parallel jobs
NUM_SEEDS=100
MAX_LAMBDA=100.00
PLATFORM="cpu"

# Define the paths to the Python scripts
BESSEL_STATIC_SCRIPT="./scripts/bessel_static.py"
BESSEL_STANDARD_SCRIPT="./scripts/bessel_standard.py"

# Define the base output directory
OUTPUT_BASE_DIR="./output"

export PYTHONPATH=$(pwd)/src:$PYTHONPATH
echo "Set the python path to: $PYTHONPATH"

# Function to run a Python script with a given seed and output directory
run_script() {
    local script=$1
    local seed=$2
    local output_dir=$3
    local lambda=$4
    mkdir -p $output_dir
    JAX_PLATFORM_NAME=$PLATFORM python $script --seed $seed --out_path $output_dir --size_influence $lambda
}


# Run the scripts for each seed in parallel
static_output_dir="${OUTPUT_BASE_DIR}/BESSEL/"
standard_output_dir="${OUTPUT_BASE_DIR}/BESSEL/"

for seed in $(seq 0 $((NUM_SEEDS - 1))); do
    echo "Begin training on seed $seed"
    for i in $(seq 0.01 0.01 $MAX_LAMBDA); do
	run_script $BESSEL_STATIC_SCRIPT $seed $static_output_dir $i
	run_script $BESSEL_STANDARD_SCRIPT $seed $standard_output_dir $i
    done
    echo "Finished training seed $seed"
done

echo "JOB COMPLETE"

------------------------------------------------------------

TERM_RUNLIMIT: job killed after reaching LSF run time limit.
Exited with exit code 140.

Resource usage summary:

    CPU time :                                   56843.00 sec.
    Max Memory :                                 -
    Average Memory :                             -
    Total Requested Memory :                     -
    Delta Memory :                               -
    Max Swap :                                   -
    Max Processes :                              5
    Max Threads :                                81
    Run time :                                   43209 sec.
    Turnaround time :                            43209 sec.

The output (if any) is above this job summary.



PS:

Read file <stderr.192175> for stderr output of this job.

